diff --git a/.gitignore b/.gitignore
index 2ea172e..6f1c30c 100644
--- a/.gitignore
+++ b/.gitignore
@@ -15,4 +15,7 @@ hs_err_pid*
 */src/main/webapp/VAADIN/themes/*/styles.css
 */src/main/webapp/VAADIN/gwt-unitCache/
 */src/main/webapp/VAADIN/widgetsets/
-target
\ No newline at end of file
+
+target
+test-output
+
diff --git a/billing-persist/src/main/java/in/retalemine/constants/MongoDBKeys.java b/billing-persist/src/main/java/in/retalemine/constants/MongoDBKeys.java
index c0df1b4..050ecff 100644
--- a/billing-persist/src/main/java/in/retalemine/constants/MongoDBKeys.java
+++ b/billing-persist/src/main/java/in/retalemine/constants/MongoDBKeys.java
@@ -27,4 +27,6 @@ public interface MongoDBKeys {
 	public static final String CUSTOMER_ADDRESS = "address";
 	public static final String TAX_TYPE = "type";
 	public static final String TAX_PERCENTAGE = "pct";
+	
+	public static final String PRODUCT_DESC_DIVIDER = " - ";
 }
diff --git a/billing-persist/src/main/java/in/retalemine/entity/Product.java b/billing-persist/src/main/java/in/retalemine/entity/Product.java
index 85c658e..a5e2e19 100644
--- a/billing-persist/src/main/java/in/retalemine/entity/Product.java
+++ b/billing-persist/src/main/java/in/retalemine/entity/Product.java
@@ -10,6 +10,7 @@ import javax.measure.quantity.Quantity;
 
 import org.jscience.economics.money.Money;
 import org.jscience.physics.amount.Amount;
+import org.springframework.data.annotation.Id;
 import org.springframework.data.annotation.Transient;
 import org.springframework.data.mongodb.core.mapping.Document;
 import org.springframework.data.mongodb.core.mapping.Field;
@@ -17,6 +18,8 @@ import org.springframework.data.mongodb.core.mapping.Field;
 @Document(collection = "products")
 public class Product<Q extends Quantity> {
 
+	@Id
+	private String objectId;
 	@Field(MongoDBKeys.PRODUCT_NAME)
 	private String productName;
 	@Field(MongoDBKeys.PRODUCT_UNIT)
@@ -33,12 +36,17 @@ public class Product<Q extends Quantity> {
 	}
 
 	public Product(String productName, Measure<Double, Q> productUnit,
-			String productDescription, Set<Amount<Money>> unitPrices,
-			Date createdOrModifiedDate) {
+			Set<Amount<Money>> unitPrices, Date createdOrModifiedDate) {
 		this.productName = productName;
 		this.productUnit = productUnit;
-		this.productDescription = productDescription;
+		this.productDescription = productName
+				+ MongoDBKeys.PRODUCT_DESC_DIVIDER + productUnit;
 		this.unitPrices = unitPrices;
 		this.createdOrModifiedDate = createdOrModifiedDate;
 	}
+
+	public String getProductDescription() {
+		return productDescription + productName + " - " + productUnit;
+	}
+
 }
diff --git a/billing-persist/src/main/java/in/retalemine/repository/FeaturedRepository.java b/billing-persist/src/main/java/in/retalemine/repository/FeaturedRepository.java
index f6e6925..cf3ca14 100644
--- a/billing-persist/src/main/java/in/retalemine/repository/FeaturedRepository.java
+++ b/billing-persist/src/main/java/in/retalemine/repository/FeaturedRepository.java
@@ -2,6 +2,7 @@ package in.retalemine.repository;
 
 import java.io.Serializable;
 
+import org.springframework.data.mongodb.core.query.Query;
 import org.springframework.data.mongodb.repository.MongoRepository;
 import org.springframework.data.repository.NoRepositoryBean;
 
@@ -11,4 +12,5 @@ public interface FeaturedRepository<T, ID extends Serializable> extends
 
 	void insert(T entity);
 
+	T findOne(Query query, Class<T> entityClass);
 }
diff --git a/billing-persist/src/main/java/in/retalemine/repository/FeaturedRepositoryImpl.java b/billing-persist/src/main/java/in/retalemine/repository/FeaturedRepositoryImpl.java
index d75617c..524617d 100644
--- a/billing-persist/src/main/java/in/retalemine/repository/FeaturedRepositoryImpl.java
+++ b/billing-persist/src/main/java/in/retalemine/repository/FeaturedRepositoryImpl.java
@@ -3,6 +3,7 @@ package in.retalemine.repository;
 import java.io.Serializable;
 
 import org.springframework.data.mongodb.core.MongoOperations;
+import org.springframework.data.mongodb.core.query.Query;
 import org.springframework.data.mongodb.repository.query.MongoEntityInformation;
 import org.springframework.data.mongodb.repository.support.SimpleMongoRepository;
 
@@ -19,4 +20,9 @@ public class FeaturedRepositoryImpl<T, ID extends Serializable> extends
 		this.getMongoOperations().insert(entity);
 	}
 
+	@Override
+	public T findOne(Query query, Class<T> entityClass) {
+		return this.getMongoOperations().findOne(query, entityClass);
+	}
+
 }
diff --git a/billing-persist/src/main/java/in/retalemine/repository/ProductRepository.java b/billing-persist/src/main/java/in/retalemine/repository/ProductRepository.java
index 3bba98d..53e11e1 100644
--- a/billing-persist/src/main/java/in/retalemine/repository/ProductRepository.java
+++ b/billing-persist/src/main/java/in/retalemine/repository/ProductRepository.java
@@ -2,12 +2,16 @@ package in.retalemine.repository;
 
 import in.retalemine.entity.Product;
 
+import java.util.List;
+
+import org.springframework.data.domain.Pageable;
 import org.springframework.data.mongodb.repository.MongoRepository;
 import org.springframework.stereotype.Repository;
 
 @Repository
-public interface ProductRepository extends MongoRepository<Product<?>, String> {
+public interface ProductRepository extends MongoRepository<Product<?>, String>,
+		ProductBaseRepository<Product<?>, String> {
 
-	public Product<?> findByProductName(String productName);
+	List<Product<?>> findByProductNameIgnoreCase(Pageable pageable);
 
 }
diff --git a/billing-persist/src/main/resources/spring-mongo-config.xml b/billing-persist/src/main/resources/spring-mongo-config.xml
index 24d90fd..2cf9184 100644
--- a/billing-persist/src/main/resources/spring-mongo-config.xml
+++ b/billing-persist/src/main/resources/spring-mongo-config.xml
@@ -1,8 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <beans xmlns="http://www.springframework.org/schema/beans"
 	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
-	xsi:schemaLocation="http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
-		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">
 
 	<mongo:db-factory id="mongoDbFactory" dbname="retalemine" />
 
@@ -29,9 +28,12 @@
 		</mongo:custom-converters>
 	</mongo:mapping-converter>
 
+	<bean id="writeConcernResolver" class="in.retalemine.core.CustomWriteConcernResolver" />
+
 	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
 		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
 		<constructor-arg name="mongoConverter" ref="mappingConverter" />
+		<property name="writeConcernResolver" ref="writeConcernResolver" />
 	</bean>
 
 	<mongo:repositories base-package="in.retalemine.repository"
diff --git a/billing-persist/src/test/java/in/retalemine/repository/BillRepositoryTest.java b/billing-persist/src/test/java/in/retalemine/repository/BillRepositoryTest.java
index 51bffac..40709cb 100644
--- a/billing-persist/src/test/java/in/retalemine/repository/BillRepositoryTest.java
+++ b/billing-persist/src/test/java/in/retalemine/repository/BillRepositoryTest.java
@@ -24,9 +24,14 @@ import org.jscience.economics.money.Currency;
 import org.jscience.economics.money.Money;
 import org.jscience.physics.amount.Amount;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.dao.DuplicateKeyException;
 import org.springframework.data.mongodb.core.convert.MongoConverter;
+import org.springframework.data.mongodb.core.query.Query;
 import org.springframework.test.context.ContextConfiguration;
 import org.springframework.test.context.testng.AbstractTestNGSpringContextTests;
+import org.testng.Assert;
+import org.testng.annotations.BeforeClass;
+import org.testng.annotations.BeforeMethod;
 import org.testng.annotations.Test;
 
 @ContextConfiguration(locations = { "classpath:spring-mongo-config.xml" })
@@ -34,19 +39,21 @@ public class BillRepositoryTest extends AbstractTestNGSpringContextTests {
 
 	@Autowired
 	private BillRepository billrepository;
-
 	@Autowired
 	private MongoConverter mongoConverter;
+	Currency INR;
 
+	@BeforeClass
+	public void setup(){
+		INR = new Currency("INR");
+		UnitFormat.getInstance().alias(INR, "₹");
+	}
+	
 	@Test()
 	public void test_save() {
 
 		billrepository.deleteAll();
 
-		Currency INR = new Currency("INR");
-		// UnitFormat.getInstance().label(INR, "₹");
-		UnitFormat.getInstance().alias(INR, "₹");
-
 		BillItem<?, ?> sugar = BillItem.valueOf("Sugar",
 				Measure.valueOf(1.0, KILOGRAM), "Sugar - 1kg",
 				Amount.valueOf(45.0, INR), Measure.valueOf(5.0, KILOGRAM),
@@ -80,4 +87,13 @@ public class BillRepositoryTest extends AbstractTestNGSpringContextTests {
 
 	}
 
+	@Test(expectedExceptions = DuplicateKeyException.class)
+	public void test_insertDuplicate() {
+
+		// billrepository.count();
+		// billrepository.deleteAll();
+		Bill fetchBill = billrepository.findOne(new Query(), Bill.class);
+		Assert.assertNotNull(fetchBill, "Sales Collection is empty");
+		billrepository.insert(fetchBill);
+	}
 }
diff --git a/billing-persist/src/test/java/in/retalemine/repository/ProductRepositoryTest.java b/billing-persist/src/test/java/in/retalemine/repository/ProductRepositoryTest.java
index 1536d7b..b4985ad 100644
--- a/billing-persist/src/test/java/in/retalemine/repository/ProductRepositoryTest.java
+++ b/billing-persist/src/test/java/in/retalemine/repository/ProductRepositoryTest.java
@@ -18,6 +18,8 @@ import org.jscience.physics.amount.Amount;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.test.context.ContextConfiguration;
 import org.springframework.test.context.testng.AbstractTestNGSpringContextTests;
+import org.testng.annotations.BeforeClass;
+import org.testng.annotations.DataProvider;
 import org.testng.annotations.Test;
 
 @ContextConfiguration(locations = { "classpath:spring-mongo-config.xml" })
@@ -25,23 +27,63 @@ public class ProductRepositoryTest extends AbstractTestNGSpringContextTests {
 
 	@Autowired
 	private ProductRepository prodrepository;
+	Currency INR;
+
+	@BeforeClass
+	public void setup() {
+		INR = new Currency("INR");
+	}
+
+	@DataProvider
+	public Object[][] productDataProvider() {
 
-	@Test()
-	public void test_save() {
-		Currency INR = new Currency("INR");
 		Set<Amount<Money>> prices = new HashSet<Amount<Money>>();
 		prices.add(Amount.valueOf(45.0, INR));
 
-		prodrepository.deleteAll();
+		Product<?> product1 = new Product<Mass>("Sugar", Measure.valueOf(1.0,
+				SI.KILOGRAM), prices, new Date());
+		Product<?> product2 = new Product<Volume>("Sun oil", Measure.valueOf(
+				1.0, NonSI.LITER), prices, new Date());
+
+		return new Object[][] { { product1 }, { product2 } };
+	}
+
+	@Test(enabled = true)
+	public void test_upsert() {
+
+	}
+
+	@Test(enabled = true)
+	public void test_updateFirst() {
+
+	}
+
+	@Test(enabled = true)
+	public void test_findProductsByName() {
 
-		Product<?> prod = new Product<Mass>("Sugar", Measure.valueOf(1.0,
-				SI.KILOGRAM), "", prices, new Date());
-		prodrepository.save(prod);
+	}
+
+	@Test(enabled = true)
+	public void test_findOne() {
+
+	}
+
+	@Test(enabled = true)
+	public void test_findAll() {
+
+	}
+
+	@Test(enabled = true)
+	public void test_findByProductNameIgnoreCase() {
+
+	}
+
+	@Test(enabled = true, dataProvider = "productDataProvider")
+	public void test_save(Product<?> product) {
+
+		prodrepository.deleteAll();
 
-		prod = new Product<Volume>("Sun oil",
-				Measure.valueOf(1.0, NonSI.LITER), "", prices, new Date());
-		prodrepository.save(prod);
+		prodrepository.save(product);
 
-		Product<?> prodfind = prodrepository.findByProductName("Sugar");
 	}
 }
